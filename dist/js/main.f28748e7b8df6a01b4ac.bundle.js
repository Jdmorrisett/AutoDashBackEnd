"use strict";(globalThis.webpackChunkAutoDashFrontEndBoilerPlate=globalThis.webpackChunkAutoDashFrontEndBoilerPlate||[]).push([[179],{366:(e,t,p)=>{let T=0;const d=(e=!1)=>(e&&(T=0),T++),y={PEDAL_POSITION:{id:d(),byteType:1},RPM:{id:d(),byteType:2},FUEL_PRESSURE:{id:d(),byteType:2},SPEEDO:{id:d(),byteType:2},INJECTOR_PULSEWIDTH:{id:d(),byteType:2},FUEL_FLOW:{id:d(),byteType:2},CLOSED_LOOP_STATUS:{id:d(),byteType:1},DUTY_CYCLE:{id:d(),byteType:1},AFR_LEFT:{id:d(),byteType:3},CLOSED_LOOP_COMP:{id:d(),byteType:2},AFR_RIGHT:{id:d(),byteType:3},TARGET_AFR:{id:d(),byteType:3},AFR_AVERAGE:{id:d(),byteType:3},IGNITION_TIMING:{id:d(),byteType:3},MAP:{id:d(),byteType:2},KNOCK_RETARD:{id:d(),byteType:2},MAT:{id:d(),byteType:2},TPS:{id:d(),byteType:1},BAR_PRESSURE:{id:d(),byteType:3},CTS:{id:d(),byteType:2},OIL_PRESSURE:{id:d(),byteType:2},BATT_VOLTAGE:{id:d(),byteType:3},ODOMETER:{id:d(),byteType:2},TRIP_ODOMETER:{id:d(),byteType:2},GPS_SPEEED:{id:d(),byteType:2},WARNINGS:{id:d(),byteType:4},FUEL_LEVEL:{id:d(),byteType:1},CURRENT_MPG:{id:d(),byteType:3},AVERAGE_MPG:{id:d(),byteType:3},AVERAGE_MPG_POINTS:{id:d(),byteType:5},AVERAGE_MPG_POINT_INDEX:{id:d(),byteType:1},LOW_LIGHT_DETECTED:{id:d(),byteType:1},PRESSURE_TYPE:{id:d(),byteType:1},TEMP_TYPE:{id:d(),byteType:1},SOME_NEW_VALUE:{id:d(),byteType:8}};let E=0;Object.keys(y).forEach((e=>{const t=y[e];switch(t.byteOffset=E,t.byteType){case 1:case 4:case 6:E+=1;break;case 2:case 7:E+=2;break;case 3:case 8:E+=4;break;case 5:E+=100;break;default:throw new Error(`Unknown byteType: ${t.byteType}`)}})),Object.freeze(y);const a={BATT_VOLTAGE:d(!0),OIL_PRESSURE:d(),LOW_FUEL:d(),ENGINE_TEMPERATURE:d(),ECU_COMM:d(),GPS_NOT_ACQUIRED:d(),GPS_ERROR:d(),COMM_ERROR:d()};function r(e,t,p,T,d){const y=document.createElement("div");y.classList.add("gauge"),e.appendChild(y);const E=document.createElement("div");E.innerText="0.0",E.classList.add("value"),y.appendChild(E);const a=document.createElement("div");return a.classList.add("label"),a.innerText=t,y.appendChild(a),{updateValue:function(e,t=0){const p=Number(e).toFixed(t);E.innerText=p.toString(),function(e){d&&e>=d.lower&&e<=d.upper?y.style.color="red":T&&e>=T.lower&&e<=T.upper?y.style.color="orange":y.style.color="white"}(p)}}}Object.freeze(a),e=p.hmd(e),console.log("Hello from index.js");const i=new Worker(new URL(p.p+p.u(946),p.b));let o=[],s=!0,l=!1;const n=document.getElementById("dashboardContainer");console.log(`This is it! ${n}`),r(n,"MPH",0,{lower:0,upper:120},{lower:70,upper:180});const b=r(n,"Tach",0,{lower:4800,upper:5800},{lower:5801,upper:8e3}),u=r(n,"Oil Pressure",0,{lower:55,upper:64},{lower:65,upper:150}),_=r(n,"Engine Temp",0,{lower:0,upper:120},{lower:220,upper:280}),c=r(n,"Fuel Pressure",0,{lower:0,upper:48},{lower:70,upper:120}),R=r(n,"Voltage",0,{lower:0,upper:11},{lower:15,upper:18}),O=()=>{s&&(i.postMessage({msg:"process_update_data",updateData:o}),s=!1),l=P(a.COMM_ERROR),b.updateValue(o[y.RPM.id],0),u.updateValue(o[y.OIL_PRESSURE.id],1),_.updateValue(o[y.CTS.id],0),c.updateValue(o[y.FUEL_LEVEL.id],1),R.updateValue(o[y.BATT_VOLTAGE.id],1),requestAnimationFrame(O)},P=e=>!!(o[y.WARNINGS.id]&128>>e%8);i.onmessage=e=>{if("update_data_ready"===e.data.msg)try{o=e.data.updateData,s=!0}catch(e){console.error(e)}},i.postMessage({msg:"start"}),O(),e.exports={}}},e=>{e(e.s=366)}]);